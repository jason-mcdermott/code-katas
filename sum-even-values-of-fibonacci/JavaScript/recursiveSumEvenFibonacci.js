//  CHALLENGE (taken from Project Euler, no. 2):
//
//  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
//  the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the 
//  even-valued terms.
//
//  SOLUTION: This is a recursive version also using memoization.

function recursiveSumEvenFibonacci(a, b, sum) {
    
    if(a + b >= max){
        return sum;
    }
       
    let temp = a + b;
    a = b;
    b = temp;
    
    if(temp % 2 === 0){
        sum += temp;
    }

    return recursiveSumEvenFibonacci(a, b, sum);
}

let max = 4000000;

// 4,613,732
console.log(recursiveSumEvenFibonacci(1, 2, 2));